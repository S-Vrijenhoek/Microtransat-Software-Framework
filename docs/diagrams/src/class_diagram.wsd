@startuml Class Diagram

interface ModuleBase
interface ModuleFactoryBase
interface WaypointFactoryBase
interface ComputationBase
interface CoreBase

class StaticModule
class ModuleFactory
class Computation
class Core
class PID
class WaypointController
class Waypoint
class WaypointFactory

ModuleBase <|.. StaticModule
ModuleFactoryBase <|.. ModuleFactory
ComputationBase <|.. Computation
WaypointFactoryBase <|-- WaypointFactory
CoreBase <|.. Core
Core "1" - "1..*" ModuleBase
Core o-left- ModuleFactoryBase
Core o-left- WaypointFactoryBase
Core o-down- ComputationBase
Computation o-right- PID
Computation o-left- WaypointController
WaypointController "1" -down- "1..*" Waypoint

interface ModuleBase {
    - arbitration_id
    + __eq__(other)
}

interface CoreBase {
    + get_optimal_saling_angle()
    + get_optimal_rudder_angle()
    + set_module_data(arbitration_id, data)
}

interface ModuleFactoryBase {
    + create_modules()
}

interface ComputationBase {
    + compute_optimal_sailing_angle(sailboat_rotation, wind_direction)
    + compute_optimal_rudder_angle(sailboat_position, sailboat_rotation, rudder_rotation, wind_direction)
}

interface WaypointFactoryBase {
    + create_waypoints()
}

class PID {
    + error_intregral
    + kp
    + ki
    + kd
    + calculate_proportional(error)
    + calculate_intergrational(dt, error)
    + calculate_differentional(current_input, dt, error)
}

class WaypointController {
    + current_waypoint
    + next_waypoint()
    + angle_to_current_waypoint(sailboat_coordinates)
    + distance_to_waypoint(sailboat_coordinates)
}

class Waypoint {
    + coordinate_x
    + coordinate_y
}

class StaticModule {
    + data
}

class Computation {
    + delta_time
}

class Core {
    - module_indices
    - get_module(arbitration_id)
    - register_module_indices()
}

note left of ModuleFactoryBase::create_modules
    Modules need to be defined
    by their arbitation ID
    and module type inside 
    a settings file.
end note

note right of ModuleBase::__eq__
    Compares arbitration IDs
    of both modules. This is
    used for testing purposes.
end note

@enduml